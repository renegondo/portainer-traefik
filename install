#!/bin/bash

# Limpiar consola
clear

# Solicitar subdominio
echo -e "\e[32mSubdominio para Portainer: \e[0m"
read SUBDOMINIO

# Solicitar email para Let's Encrypt
echo -e "\e[32mEmail para Let's Encrypt: \e[0m"
read EMAIL

# Confirmar subdominio ingresado
echo -e "\nPor favor confirma que el subdominio y el email que ingresaste son correctos"
echo -e "Subdominio: \e[32m$SUBDOMINIO\e[0m"
echo -e "Email: \e[32m$EMAIL\e[0m"

read -p "¿Los datos ingresados son correctos? (S/N): " CONFIRMAR

while [[ "$CONFIRMAR" != "S" && "$CONFIRMAR" != "s" ]]; do
  clear
  echo -e "\e[32mSubdominio para Portainer: \e[0m"
  read SUBDOMINIO

  echo -e "\e[32mEmail para Let's Encrypt: \e[0m"
  read EMAIL

  # Confirmar datos ingresados
  echo -e "\nPor favor confirma que el subdominio y el email que ingresaste son correctos"
  echo -e "Subdominio: \e[32m$SUBDOMINIO\e[0m"
  echo -e "Email: \e[32m$EMAIL\e[0m"

  read -p "¿Los datos ingresados son correctos? (S/N): " CONFIRMAR
done

# Limpiar consola
clear

# Preparar ambiente del VPS
echo -e "\033[1;32m 1/5 Preparando VPS... \033[0m"
sudo apt-get -yqqq update >/dev/null 2>&1
sudo apt-get -yqqq install sudo curl nano zip htop unzip wget >/dev/null 2>&1
sudo apt-get -yqqq clean >/dev/null 2>&1
sudo apt-get -yqqq autoclean >/dev/null 2>&1
sudo apt -yqqq autoremove --purge snapd >/dev/null 2>&1
sudo ufw allow 80/tcp comment 'accept HTTP port' >/dev/null 2>&1
sudo ufw allow 443/tcp comment 'accept HTTPS port' >/dev/null 2>&1
sudo ufw enable >/dev/null 2>&1 # Activar UFW al final de la preparación
clear

# Instalar Docker
echo -e "\033[1;32m 2/5 Instalando Docker... \033[0m"
sudo curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh >/dev/null 2>&1
sudo service docker start >/dev/null 2>&1
sudo systemctl start docker >/dev/null 2>&1
sudo systemctl enable docker >/dev/null 2>&1 # Asegurar que Docker inicie al arrancar
clear

# Instalar Traefik
echo -e "\033[1;32m 3/5 Instalando Traefik... \033[0m"
sudo mkdir -p /opt/traefik/letsencrypt
sudo touch /opt/traefik/acme.json
sudo chmod 600 /opt/traefik/acme.json

cat << EOF | sudo tee /opt/traefik/docker-compose.yml
version: "3.8"

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/opt/traefik/letsencrypt:/letsencrypt"
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"
      - "traefik.http.routers.api.rule=Host(`traefik.$SUBDOMINIO`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/" # Cambia usuario y contraseña aquí
    restart: unless-stopped
    networks:
      - traefik_network

networks:
  traefik_network:
    driver: bridge
EOF

cd /opt/traefik
sudo docker-compose up -d
clear

# Instalar Portainer
echo -e "\033[1;32m 4/5 Instalando Portainer... \033[0m"
sudo docker volume create portainer_data

cat << EOF | sudo tee /opt/portainer/docker-compose.yml
version: '3.8'

services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`$SUBDOMINIO`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - traefik_network

volumes:
  portainer_data:

networks:
  traefik_network:
    external: true
EOF

cd /opt/portainer
sudo docker-compose up -d
clear

# Verificar la creación de la red traefik_network
echo -e "\033[1;32m Verificando la creación de la red traefik_network... \033[0m"
if ! sudo docker network inspect traefik_network >/dev/null 2>&1; then
  echo -e "\033[1;31m Error: La red traefik_network no se creó correctamente. \033[0m"
  exit 1
fi

# Verificar la creación del contenedor de Portainer
echo -e "\033[1;32m Verificando la creación del contenedor de Portainer... \033[0m"
if ! sudo docker ps -a --format '{{.Names}}' | grep -q portainer; then
  echo -e "\033[1;31m Error: El contenedor de Portainer no se creó correctamente. \033[0m"
  exit 1
fi

# Esperar que se active portainer
echo -e "\033[1;32m 5/5 Finalizando instalación... \033[0m"
sleep 30
clear

# Mostrar mensaje final
echo -e "\n\033[1;31m==============================================\033[0m"
echo -e "\033[1;32m|           La preparación está OK!          |\033[0m"
echo -e "\033[1;31m==============================================\033[0m\n"
echo -e "\033[1;33m Accede a Portainer desde: \033[0m\e[32mhttps://$SUBDOMINIO\e[0m\n"
echo -e "\033[1;33m Accede a Traefik Dashboard desde: \033[0m\e[32mhttps://traefik.$SUBDOMINIO\e[0m\n"
echo -e "\033[1;31m Usuario: test \033[0m" # Recuerda cambiar esta contraseña
echo -e "\033[1;31m Contraseña: test \033[0m" # Recuerda cambiar esta contraseña
